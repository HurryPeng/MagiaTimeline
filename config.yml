# yaml-language-server: $schema=./ConfigSchema.json

# MagiaTimeline config

# This is the configuration file that defines the parameters required for the main program to run. 
# In order for the program to work for your video, you should adjust the parameters here. 
# The file is written in YAML format and constrained by JSON Schema in ConfigSchema.json. 
# However, you do not need to be an expert of YAML or JSON Schema to modify this file. 
# Any characters after a "#" in a line are comments, which will be ignored by the program. 
# There will be comments for entries below to help you understand and modify the parameters. 
# If you are still not sure how to do it, just "do as Romans do": imitate existing defaults. 
# Take it easy, the program will verify this file before running, so you are unlikely to 
# harm the program with ill-formed parameters. 

# Rectangles

# Any rectangle (or "rect") to be mentioned below defines a rectangular area in a frame. 
# It is denoted in a tuple of four decimals from 0.0 to 1.0, [left, right, top, bottom]. 
# Each decimal represents a width or height in ratio to the whole frame. 
# For example, [0.0, 1.0, 0.0, 1.0] represents the whole frame, 
# and [0.50, 1.0, 0.0, 1.0] represents the right half of the frame. 

# source: path(s) of source video files
source:
# - src.mp4
# - src2.mp4

# destination: path(s) of destination subtitle files
# Include only the name of the file, without the extension,
# because they may also be used by extra jobs.
# There must be equal number of source(s) and destination(s). 
destination:
- MagiaTimelineOutput
# - MagiaTimelineOutput2

# assTemplate: template ass file defining the header of destination ass file, in asst format
# You do not need to modify this in most cases. 
assTemplate: template.asst

# enableOpenCL: enable OpenCL acceleration
# If you have a graphics card or other accelerators, enabling this option may speed up the program.
# However, if you encounter problems or the program runs slower, you should disable this option.
enableOpenCL: false

# contentRect: defines the rectangle that wraps the content of a frame, cutting away black bars around
# If your video has black bars around the canvas, you should set this rectangle to cut them away. 
# For example, if your video has 1% of black bar on left and right and 9% on top and bottom, 
# then you should set this to [0.01, 0.99, 0.09, 0.91]. 
contentRect: [0.0, 1.0, 0.0, 1.0]

# # offset: global offset of the subtitles, in number of frames
# # If the subtitles are not aligned with the dialogues in the video, you can adjust this parameter.
# # The offset is the number of frames that the subtitles should be shifted forward or backward.
# # For example, if the subtitles are 1 frame ahead of the dialogues, you should set this to -1.0.
# # Can be fractional, e.g. 0.5
# offset: 0.0

# Strategies and Presets

# MagiaTimeline supports different games and scenes by providing sets of algorithms called Strategies. 
# However, when recorded from devices of different resolutions, critical areas (e.g. dialog boxes) 
# may appear at different places on the screen, even for the same game. 
# Therefore, we also provide several presets under each Strategy to fit different resolutions. 
# Before running the program, you should choose a Strategy and a preset under the chosen strategy. 
# If this still does not work for your resolution, you can create and use your own preset. 
# You can modify each rectangle so that they align with the critical areas in your video. 
# To check alignment, use debug mode in framewise engine. 

# strategy: which algorithm set to use
# - mr: MagiaRecord quest video
# - mr-s0: MagiaRecord Scene0 film
# - lcb: LimbusCompany quest video
# - lcb-mech: LimbusCompany mechanics introduction video
# - pkm: PekemonEmerald quest video
# - prk: Parako anime conte
# - bdr: BanG Dream
# - otl: Outlined text
# - bcs: Box colour stat
strategy: bcs

# preset: which preset of parameters under a strategy to use
preset: default

# MagiaRecord quest video strategy
mr:
  default:
    dialogOutlineRect: [0.25, 0.75, 0.60, 0.95]
    dialogBgRect: [0.3125, 0.6797, 0.7264, 0.8784]
    blackscreenRect: [0.15, 0.85, 0.00, 1.00]
    whitescreenRect: [0.15, 0.65, 0.00, 1.00]
    cgSubAboveRect: [0.0, 1.0, 0.60, 0.65]
    cgSubBorderRect: [0.0, 1.0, 0.65, 0.70]
    cgSubBelowRect: [0.0, 1.0, 0.70, 0.75]
    cgSubTextRect: [0.3, 0.7, 0.70, 1.00]
  narrow:
    dialogOutlineRect: [0.21, 0.79, 0.60, 0.97]
    dialogBgRect: [0.27, 0.73, 0.75, 0.90]
    blackscreenRect: [0.15, 0.85, 0.00, 1.00]
    whitescreenRect: [0.15, 0.65, 0.00, 1.00]
    cgSubAboveRect: [0.0, 1.0, 0.67, 0.72]
    cgSubBorderRect: [0.0, 1.0, 0.72, 0.77]
    cgSubBelowRect: [0.0, 1.0, 0.77, 0.82]
    cgSubTextRect: [0.3, 0.7, 0.77, 1.00]
  # You can create and use your own preset, as long as it conforms to the format of its strategy. 
  myownpreset: 
    dialogOutlineRect: [0.25, 0.75, 0.60, 0.95]
    dialogBgRect: [0.3125, 0.6797, 0.7264, 0.8784]
    blackscreenRect: [0.15, 0.85, 0.00, 1.00]
    whitescreenRect: [0.15, 0.65, 0.00, 1.00]
    cgSubAboveRect: [0.0, 1.0, 0.60, 0.65]
    cgSubBorderRect: [0.0, 1.0, 0.65, 0.70]
    cgSubBelowRect: [0.0, 1.0, 0.70, 0.75]
    cgSubTextRect: [0.3, 0.7, 0.70, 1.00]

# MagiaRecord Scene0 film strategy
mr-s0:
  default:
    dialogRect: [0.35, 0.65, 0.74, 0.93]
    blackscreenRect: [0.15, 0.85, 0.00, 1.00]
  narrow:
    dialogRect: [0.32, 0.68, 0.76, 0.96]
    blackscreenRect: [0.15, 0.85, 0.00, 1.00]

# LimbusCompany quest video strategy
lcb:
  default:
    dialogRect: [0.18, 0.82, 0.79, 0.97]

# LimbusCompany mechanics introduction video strategy
lcb-mech:
  default:
    dialogRect: [0.30, 0.70, 0.875, 0.915]

# PekemonEmerald quest video strategy
pkm:
  default:
    dialogBgRect: [0.05, 0.95, 0.75, 0.95]

# Parako anime conte strategy
prk:
  default:
    dialogRect: [0.00, 1.00, 0.86, 1.00]
  vertical:
    dialogRect: [0.00, 1.00, 0.57, 0.69]

# BanG Dream strategy
bdr:
  default:
    dialogRect: [0.06, 0.94, 0.82, 0.96]

        # # Hotel Zundamon
        # # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 5
        # textWeightMax = 19
        # textHSVRanges = [
        #     ((0, 200, 100), (10, 255, 180)),
        #     ((170, 200, 100), (180, 255, 180)),
        #     ((25, 100, 100), (55, 200, 200))
        # ]
        # outlineWeightMin = 1
        # outlineWeightMax = 5
        # outlineHSVRanges = [((0, 0, 200), (180, 32, 255))]
        # boundCompensation = 2
        # sobelThreshold = 200

        # # Zunda House
        # # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 1
        # textWeightMax = 25
        # textHSVRanges = [
        #     ((155, 100, 200), (180, 200, 255)),
        #     ((55, 150, 150), (75, 220, 220))
        # ]
        # outlineWeightMin = 1
        # outlineWeightMax = 15
        # outlineHSVRanges = [((0, 0, 240), (180, 64, 255))]
        # boundCompensation = 4
        # sobelThreshold = 230
        # nestingSuppression = 23

        # # Shioneru
        # # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 1
        # textWeightMax = 9
        # textHSVRanges = [((0, 0, 0), (180, 255, 16))]
        # outlineWeightMin = 1
        # outlineWeightMax = 15
        # outlineHSVRanges = [((0, 0, 200), (180, 64, 255))]
        # boundCompensation = 4
        # sobelThreshold = 200

        # # JapanTrafficLab
        # # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 1
        # textWeightMax = 19
        # textHSVRanges = [((70, 180, 180), (100, 255, 255))]
        # outlineWeightMin = 1
        # outlineWeightMax = 15
        # outlineHSVRanges = [((95, 180, 180), (140, 255, 255))]
        # boundCompensation = 4
        # sobelThreshold = 100
        # nestingSuppression = 0

        # # Uemon
        # # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 1
        # textWeightMax = 25
        # textHSVRanges = [((0, 0, 230), (180, 64, 255))]
        # # outlineWeightMin = 1
        # outlineWeightMax = 15
        # outlineHSVRanges = [((0, 0, 0), (180, 255, 128))]
        # boundCompensation = 4
        # sobelThreshold = 200
        # nestingSuppression = 0

        # # Haruki
        # # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 1
        # textWeightMax = 25
        # textHSVRanges = [
        #     ((75, 100, 210), (95, 230, 255)),
        #     ((140, 100, 210), (180, 230, 255)),
        #     ((50, 100, 210), (70, 150, 255))
        # ]
        # # outlineWeightMin = 1
        # outlineWeightMax = 15
        # # outlineHSVRanges = [((0, 0, 0), (180, 255, 32))]
        # outlineHSVRanges = [((0, 0, 0), (180, 255, 32))]
        # boundCompensation = 4
        # sobelThreshold = 240
        # nestingSuppression = 0

        # Fushigi
        # dialogRect: [0.00, 1.00, 0.75, 1.00]
        # textWeightMin = 3
        # textWeightMax = 29
        # textHSVRanges = [
        #     ((0, 200, 180), (10, 255, 255)),
        #     ((160, 200, 180), (180, 255, 255)),
        #     ((15, 150, 200), (45, 255, 255)),
        # ]
        # outlineWeightMin = 1
        # outlineWeightMax = 11
        # outlineHSVRanges = [
        #     ((0, 0, 180), (180, 64, 255)),
        #     ((0, 0, 0), (180, 255, 16))
        # ]
        # boundCompensation = 4
        # sobelThreshold = 150
        # nestingSuppression = 0


# Outlined text strategy
otl:
  yukkurirailways:
    dialogRect: [0.00, 1.00, 0.75, 1.00]
    fastMode: false
    textWeightMin: 3
    textWeightMax: 25
    textHSVRanges:
      - [0, 0, 240, 180, 16, 255]
    outlineWeightMax: 15
    outlineHSVRanges:
      - [0, 0, 0, 180, 255, 16]
    boundCompensation: 4
    sobelThreshold: 250
    nestingSuppression: 0
    featureThreshold: 1.0
    featureJumpThreshold: 0.1
    featureJumpStddevThreshold: 0.005
  
  yukkurilocaltrain:
    dialogRect: [0.00, 1.00, 0.75, 1.00]
    fastMode: false
    textWeightMin: 5
    textWeightMax: 25
    textHSVRanges:
      - [0, 200, 128, 30, 255, 255]
      - [170, 200, 128, 180, 255, 255]
      - [105, 100, 128, 135, 255, 255]
    outlineWeightMax: 5
    outlineHSVRanges:
      - [0, 0, 180, 180, 64, 255]
    boundCompensation: 4
    sobelThreshold: 192
    nestingSuppression: 9
    featureThreshold: 1.0
    featureJumpThreshold: 0.1
    featureJumpStddevThreshold: 0.005
  
  japantrafficlab:
    dialogRect: [0.00, 1.00, 0.75, 1.00]
    fastMode: false
    textWeightMin: 1
    textWeightMax: 19
    textHSVRanges:
      - [70, 180, 180, 100, 255, 255]
    outlineWeightMax: 15
    outlineHSVRanges:
      - [95, 180, 180, 140, 255, 255]
    boundCompensation: 4
    sobelThreshold: 100
    nestingSuppression: 0
    featureThreshold: 1.0
    featureJumpThreshold: 0.1
    featureJumpStddevThreshold: 0.005

  yorumeron-yukari:
    dialogRect: [0.00, 1.00, 0.80, 1.00]
    fastMode: false
    textWeightMin: 1
    textWeightMax: 15
    textHSVRanges:
      - [135, 0, 220, 155, 60, 255]
    outlineWeightMax: 9
    outlineHSVRanges:
      - [0, 0, 0, 180, 255, 25]
    boundCompensation: 2
    sobelThreshold: 192
    nestingSuppression: 0
    featureThreshold: 1.0
    featureJumpThreshold: 0.1
    featureJumpStddevThreshold: 0.005

# Adaptive median colour strategy
bcs:
  default:
    dialogRect: [0.00, 1.00, 0.75, 1.00]
    sobelThreshold: 32
    featureThreshold: 0.3
    featureJumpThreshold: 0.1
    featureJumpStddevThreshold: 0.005
    boxVerticalExpansion: 0.05
    nonMajorBoxSuppressionMaxRatio: 0.2
    nonMajorBoxSuppressionMinRank: 1
    minCcAreaRatio: 0.0
    maxCcAreaRatio: 0.3
    minCcFinalMean: 3.0
    maxCcStddev: 10
    colourTolerance: 30
    clusterThreshold: 1
    minColourAreaRatio: 0.01
    maxGreyscalePenalty: 0.95
    iirPassDenoiseMinTime: 300

# Engines

# Engines decide how frames are sampled before they are processed by Strategies.
# This affects the performance and accuracy of the program.
# A Strategy must implement an Engine's required methods to work with it.
# Not all Engines are compatible with all Strategies.
# By default, all Strategies are compatible with the Framewise Engine.
# Slower strategies typically also support the Specilative Engine for faster processing.
# Each Engine has its own parameters that can be adjusted.

# engine: which sampling pipeline to use
# - framewise: samples every frame or every n-th frame
# - speculative: skips frames where subtitles do not change and performs binary search for change points

engine: speculative

framewise:
  # sampleInterval: in how many frames to sample a frame
  # If you have a high-resolution or high-fps video, you can increase this number to speed up the program.
  # However, this will reduce the accuracy of the subtitles.
  sampleInterval: 2
  debug: true

speculative:
  # emptyGapForceCheck: in how many milliseconds to force check for existence of subtitles
  # If two frames were sampled where none of them had subtitles,
  # the program will force check the existence of subtitles in this number of milliseconds,
  # instead of considering there are no subtitles in the gap.
  # If this is set to 0, the program will not force check. 
  emptyGapForceCheck: 1000
  debug: false

# Extra Jobs

# Extra jobs are additional tasks that can be performed after the subtitles are extracted.
# Currently, the program supports only one experimental extra job: OCR.

# List of extra jobs to perform after subtitle extraction
extraJobs: [ocr]

ocr:
  suffix: "-ocr.txt"
  separator: "@"
  doPaddle: true
  paddleLang: "japan"
  doTesseract: true
  tesseractLang: "jpn"
